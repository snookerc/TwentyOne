@page "/game"

@using System.Drawing;
@using TwentyOne.Services;
@using TwentyOne.Models;
@using TwentyOne.Pages.Partials;
@inject IJSRuntime jsRuntime
@inject CardDeck cardDeck

<PageTitle>Twenty One</PageTitle>

<audio id="CardShuffle"><source src="/sounds/CardShuffle1.mp3" /></audio>
<audio id="CardFlip"><source src="/sounds/CardFlip1.mp3" /></audio>

<h1>Twenty One</h1>

<div>
    <button @onclick="Deal">New Game</button>
    <button @onclick="HitMe">Hit Me! (@cardDeck.RemainingCardCount left)</button>
</div>

<div class="cardcontainer">
    @if (dealerHand != null)
    {
        @foreach (var card in dealerHand.Cards)
        {
            <CardPartialView Card="card" />
        }
    }
</div>
<div id="DealerPlayerSeparator">
    <div><hr style="color:yellow" /></div>
    <div class="dealerseparatorparent"><div class="dealerseparatorchild">Dealer must stand on 17 and draw to 16</div></div>
    <div><hr style="color:yellow" /></div>
</div>
<div class="cardcontainer">
    @if (dealerHand != null)
    {
        @foreach (var card in playerHand.Cards)
        {
            <CardPartialView Card="card" />
        }
    }
</div>

@code {
    private byte[] CardImage = null!;

    private Hand dealerHand;
    private Hand playerHand;

    protected override async Task OnInitializedAsync()
    {
        //await GetImage(SuitNumber, CardNumber);
        dealerHand = new Hand(cardDeck);
        playerHand = new Hand(cardDeck);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //TODO:  this doesn't work.  is there a "before render"?
        if (firstRender)
        {
            await Deal();
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task Deal()
    {
        cardDeck.NewDeal();

        //await jsRuntime.InvokeAsync<string>("PlayAudio", "CardShuffle");
        await jsRuntime.InvokeAsync<string>("PlaySound", "/sounds/CardShuffle1.mp3");
        dealerHand = new Hand(cardDeck, 2);
        playerHand = new Hand(cardDeck, 2);
    }

    private async Task HitMe()
    {
        //await jsRuntime.InvokeAsync<string>("PlayAudio", "CardFlip");
        await jsRuntime.InvokeAsync<string>("PlaySound", "/sounds/CardFlip1.mp3");
        playerHand.GenerateNewCardInDeck();
    }

}